openapi: 3.1.0
info:
  title: Inventory Management System APIs
  version: 1.0.0
  description: The Inventory Management System APIs provide endpoints to manage suppliers, products, inventories and orders. These endpoints allow for CRUD operations on the correspondig resources within the inventory system. These APIs stand to RESTful principles and utilizes JSON format for data exchange.
servers:
    - url: http://localhost:8080  
tags:
  - name: suppliers
    description: Everything about suppliers
  - name: products
    description: Access products
  - name: inventories
    description: Access inventories
  - name : orders
    description: Access orders
paths:
  /suppliers:
    post:
      tags:
        - suppliers
      summary: Create a new supplier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                  format: email
                address:
                  type: string
                phone:
                  type: string
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Supplier'
        '400':
          description: Bad Request
        '409':
          description: Conflict
        '422':
          description: Unprocessable Entity
    get:
      tags:
        - suppliers
      summary: Retrieve all suppliers
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Supplier'
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '401':
          description: Unauthorized
    put:
      tags:
        - suppliers
      summary: Replace all suppliers with new collection
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Supplier'
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '400':
          description: Bad Request
        '405':
          description: Method Not Allowed
    delete:
      tags:
        - suppliers
      summary: Delete all suppliers
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /suppliers/{id}:
    parameters:
      - name: id
        in: path
        required: true
        description: ID of the supplier to retrieve
        schema:
          type: integer
          format: int64
    get:
      tags:
        - suppliers
      summary: Retrieve specific supplier
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Supplier'
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '401':
          description: Unauthorized
    patch:
      tags:
        - suppliers
      summary: Update existing supplier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '400':
          description: Bad Request
        '422':
          description: Unprocessable Entity
    delete:
      tags:
        - suppliers
      summary: Delete specific supplier
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /products:
    post:
      tags:
        - products
      summary: Create a new product  
      requestBody:
        required: true
        content:
          application/json:
            schema:
               $ref: '#/components/schemas/Product'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          description: Bad Request
        '409':
          description: Conflict
        '422':
          description: Unprocessable Entity
    get:
      tags:
        - products
      summary: Retrieve all products
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '401':
          description: Unauthorized
    put:
      tags:
        - products
      summary: Replace all prodcuts with a new collection
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Product'
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '400':
          description: Bad Request
        '405':
          description: Method Not Allowed
    delete:
      tags:
        - products
      summary: Delete all products
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '403':
          description: Forbidden
        '401':
          description: Unauthorized
  /products/{id}:
    parameters:
      - name: id
        in: path
        required: true
        description: ID of the product to retrieve
        schema:
          type: integer
          format: int64
    get:
      tags:
        - products
      summary: Retrieve specific product
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: Not Found
        '403':
          description: Forbidden
        '401':
          description: Unauthorized
    patch:
      tags:
        - products
      summary: Update existing product
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '400':
          description: Bad Request
        '422':
          description: Unprocessable Entity
    delete:
      tags:
        - products
      summary: Delete specific product
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /inventories:
    post:
      tags:
        - inventories
      summary: Create a new inventory 
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Inventory'
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Inventory'
        '400':
          description: Bad Request
        '409':
          description: Conflict
        '422':
          description: Unprocessable Entity
    get:
      tags:
        - inventories
      summary: Retrieve all inventories  
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Inventory'
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '401':
          description: Unauthorized
    put:
      tags:
        - inventories
      summary: Replace all inventories
      requestBody:
        required: true
        content:
          applications/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Inventory'
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '400':
          description: Bad Request
        '405':
          description: Method Not Allowed
    delete:
      tags:
        - inventories
      summary: Delete all inventories
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '403':
          description: Forbidden
        '401':
          description: Unauthorized
  /inventories/{id}:
    parameters:
      - name: id
        in: path
        required: true
        description: ID of the inventory to retrieve
        schema:
          type: integer
          format: int64
    get:
      tags:
        - inventories
      summary: Retrieve speicific inventory
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Inventory'
        '404':
          description: Not Found
        '403':
          description: Forbidden
        '401':
          description: Unauthorized
    patch:
      tags:
        - inventories
      summary: Update existing inventory  
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                quantity:
                  type: integer
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '400':
          description: Bad Request
        '422':
          description: Unprocessable Entity
    delete:
      tags:
        - inventories
      summary: Delete specific inventory
      responses:
        '204': 
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /orders:
    post:
      tags:
        - orders
      summary: Create a new order
      requestBody:
        required: true
        content:
          application/json:
            schema:
               $ref: '#/components/schemas/Order'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Bad Request
        '409':
          description: Conflict
        '422':
          description: Unprocessable Entity
    get:
      tags:
        - orders
      summary: Retrieve all orders
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: 
                type: array
                items:
                  $ref: '#/components/schemas/Order'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
        - orders
      summary: Replace all orders
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Order'
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '400':
          description: Bad Request
        '405':
          description: Method Not Allowed
    delete:
      tags:
        - orders
      summary: Delete all orders
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /orders/{id}:
    parameters:
      - name: id
        in: path
        required: true
        description: ID of the order to retrieve
        schema:
          type: integer
          format: int64
    get:
      tags:
        - orders
      summary: Retrieve specific order
      responses:
        '200': 
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '403':
          description: Forbidden
    patch:
      tags:
        - orders
      summary: Update existing order
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                order_status:
                  type: string
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '400':
          description: Bad Request
        '422':
          description: Unprocessable Entity
    delete:
      tags:
        - orders
      summary: Delete specific order
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
                
          
  

components:
  schemas:
    Supplier:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        email:
          type: string
          format: email
        address:
          type: string
        phone:
          type: string
    Product:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        price:
          type: number
          format: double
        quantity_available:
          type: integer
        supplier_id:
          type: integer
          format: int64  
    Inventory:
      type: object
      properties:
        id:
          type: integer
          format: int64
        product_id:
          type: integer
          format: int64
        quantity:
          type: string
        last_restock_date:
          type: string
          format: date-time
        location:
          type: string
    Order:
      type: object
      properties:
        id:
          type: integer
          format: int64
        supplier_id:
          type: integer
          format: int64
        product_id:
          type: integer
          format: int64
        quantity:
          type: integer
        order_date:
          type: string
          format: date-time
        delivery_date:
          type: string
          format: date-time
        order_status:
          type: string
    